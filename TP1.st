Object subclass: #AlgoConsejo	instanceVariableNames: 'criterio futbolistas'	classVariableNames: ''	package: 'TP1'!!AlgoConsejo methodsFor: 'initialization' stamp: 'dani 9/18/2025 16:46'!initialize 	futbolistas := OrderedCollection new.! !!AlgoConsejo methodsFor: 'initialization' stamp: 'da 9/21/2025 17:51'!setCriterio: unCriterio	criterio:=Criterio definir: unCriterio  .! !!AlgoConsejo methodsFor: 'not defined category' stamp: 'da 9/21/2025 18:42'!obtenerFutbolistaSegunCriterio		|futbolistEncontrado| 		futbolistEncontrado := futbolistas inject: futbolistas first into: [ :mejor :actual |        (criterio  comparar: actual con: mejor) ].	^futbolistEncontrado nombre.! !!AlgoConsejo methodsFor: 'not defined category' stamp: 'da 9/24/2025 11:09'!valorDe: unNombre	|futbolsitaEncontrado|	futbolsitaEncontrado := futbolistas detect: [ :futbolista | futbolista tuNombreEs: unNombre  ].	^futbolsitaEncontrado valor.! !!AlgoConsejo methodsFor: 'as yet unclassified' stamp: 'dani 9/18/2025 16:43'!registrarFutbolistaConNombre: unNombre dePeso: unPeso  yAltura: unaAltura yEdad: unaEdad yProvenienteDelClub: unClub DePais: unPais		|unFutbolista|		unFutbolista := Futbolista new.	unFutbolista deNombre: unNombre dePeso: unPeso deAltura: unaAltura deEdad: unaEdad deClub: unClub dePais: unPais .	futbolistas add: unFutbolista .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoConsejo class	instanceVariableNames: 'futbolistas'!!AlgoConsejo class methodsFor: 'nil' stamp: 'dani 9/18/2025 17:03'!registrarFutbolistaConNombre: unNombre dePeso: unPeso  yAltura: unaAltura yEdad: unaEdad yProvenienteDelClub: unClub DePais: unPais		|unFutbolista|		unFutbolista := Futbolista new.	unFutbolista  deNombre: unNombre  dePeso: unPeso   deAltura: unaAltura   deEdad: unaEdad   deClub: unClub   dePais: unPais .		futbolistas add: unFutbolista .! !!AlgoConsejo class methodsFor: 'not defined category' stamp: 'dani 9/17/2025 21:13'!conCriterioMas: unCriterio	|algoC|	algoC:= self  new. 	algoC setCriterio: unCriterio.	^algoC! !Object subclass: #Clubes	instanceVariableNames: 'confedereaciones nombreClub porcentaje'	classVariableNames: ''	package: 'TP1'!!Clubes methodsFor: 'as yet unclassified' stamp: 'da 9/19/2025 17:47'!conClub: unClub 	nombreClub:=unClub .! !!Clubes methodsFor: 'not defined category' stamp: 'da 9/24/2025 09:45'!aplicarPorcentaje: unValor	unValor multiplicar: porcentaje .! !!Clubes methodsFor: 'not defined category' stamp: 'da 9/24/2025 10:05'!getPorcentaje	^porcentaje ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Clubes class	instanceVariableNames: ''!!Clubes class methodsFor: 'not defined category' stamp: 'da 9/24/2025 09:22'!conClub: unClub yPais: unPais | mapa claseDestino clubRetornado|    mapa := Dictionary newFrom: {        'Argentina' -> ClubArgentino.        'Brasil'    -> ClubConmebol.        'Chile'     -> ClubConmebol.        'EspaÃ±a'    -> ClubEuropeo.        'Italia'    -> ClubEuropeo }.       claseDestino := mapa at: unPais ifAbsent: [ ClubEuropeo ].   clubRetornado:= claseDestino new.	clubRetornado conClub: unClub.	^clubRetornado .! !Clubes subclass: #ClubArgentino	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ClubArgentino methodsFor: 'initialization' stamp: 'da 9/24/2025 09:25'!initialize 	porcentaje := 1.1! !Clubes subclass: #ClubConmebol	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ClubConmebol methodsFor: 'initialization' stamp: 'da 9/24/2025 09:25'!initialize 	porcentaje := 1.25! !Clubes subclass: #ClubEuropeo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ClubEuropeo methodsFor: 'initialization' stamp: 'da 9/24/2025 09:25'!initialize 	porcentaje :=1.5! !Object subclass: #Criterio	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Criterio methodsFor: 'as yet unclassified' stamp: 'da 9/21/2025 16:37'!comparar: unFutbolista con: otroFutbolista	self subclassResponsibility .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Criterio class	instanceVariableNames: ''!!Criterio class methodsFor: 'not defined category' stamp: 'da 9/24/2025 10:09'!definir: unCriterio    ^ (unCriterio = 'Caro')        ifTrue: [ CriterioCaro new ]        ifFalse: [ CriterioBarato new ].! !Criterio subclass: #CriterioBarato	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CriterioBarato methodsFor: 'as yet unclassified' stamp: 'da 9/24/2025 13:15'!comparar:  unFutbolista con: otroFutbolista 		(unFutbolista valeMasQue: otroFutbolista )ifTrue: [	^otroFutbolista].	^ unFutbolista .! !Criterio subclass: #CriterioCaro	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CriterioCaro methodsFor: 'as yet unclassified' stamp: 'da 9/24/2025 13:19'!comparar:  unFutbolista con: otroFutbolista 		(unFutbolista valeMasQue: otroFutbolista )ifTrue: [ ^unFutbolista  ].	^otroFutbolista .! !Object subclass: #Edad	instanceVariableNames: 'edad'	classVariableNames: ''	package: 'TP1'!!Edad methodsFor: 'as yet unclassified' stamp: 'da 9/24/2025 10:18'!calcularCon:peso yAltura: altura 	self subclassResponsibility ! !!Edad methodsFor: 'as yet unclassified' stamp: 'da 9/24/2025 10:18'!definirEdad: unaEdad 	edad:=unaEdad .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Edad class	instanceVariableNames: ''!!Edad class methodsFor: 'not defined category' stamp: 'da 9/24/2025 11:41'!conEdad: unaEdad 	|edadRetornada|	edadRetornada := (unaEdad >=33)ifTrue: [ 		EdadMayor  new.		  ] ifFalse: [  		EdadMenor  new].		edadRetornada definirEdad: unaEdad.	^edadRetornada ! !Edad subclass: #EdadMayor	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!EdadMayor methodsFor: 'as yet unclassified' stamp: 'da 9/24/2025 11:36'!calcularCon:peso yAltura: altura 	^(100 * peso * (altura sqrt )/(edad raisedToInteger:3)).! !Edad subclass: #EdadMenor	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!EdadMenor methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 16:33'!calcularCon:peso yAltura: altura 		^((peso* altura)/edad)! !Object subclass: #Futbolista	instanceVariableNames: 'nombre peso altura edad club pais'	classVariableNames: ''	package: 'TP1'!!Futbolista methodsFor: 'not defined category' stamp: 'da 9/24/2025 09:47'!valor 	|valor |	valor:= Valor new.	valor calcularConPeso: peso altura: altura edad: edad   .	club aplicarPorcentaje:valor.		^valor ! !!Futbolista methodsFor: 'not defined category' stamp: 'dani 9/18/2025 16:56'!tuNombreEs: unNombre	^nombre = unNombre .! !!Futbolista methodsFor: 'accessing' stamp: 'da 9/21/2025 18:34'!nombre  ^nombre ! !!Futbolista methodsFor: 'as yet unclassified' stamp: 'da 9/24/2025 12:52'!tieneValorMenorIgualQue:unValor 	^unValor esMayorQue: (self valor).! !!Futbolista methodsFor: 'as yet unclassified' stamp: 'da 9/24/2025 10:14'!deNombre: unNombre dePeso: unPeso deAltura: unaAltura deEdad: unaEdad deClub: unClub dePais: unPais		nombre:=unNombre .	peso:=unPeso .	altura:=unaAltura .	edad:= Edad conEdad: unaEdad  .	club:= Clubes conClub: unClub yPais: unPais    .	pais:=unPais .! !!Futbolista methodsFor: 'as yet unclassified' stamp: 'da 9/24/2025 12:51'!valeMasQue:otroFutbolista 	^otroFutbolista tieneValorMenorIgualQue: (self valor). ! !Object subclass: #Valor	instanceVariableNames: 'valor'	classVariableNames: ''	package: 'TP1'!!Valor methodsFor: 'not defined category' stamp: 'da 9/19/2025 16:49'!compararCon: valorEsperado precision: presicion	^(valor<(valorEsperado +presicion) )&(valor>(valorEsperado -presicion) )! !!Valor methodsFor: 'not defined category' stamp: 'da 9/24/2025 09:45'!multiplicar: unPorcentaje 	valor := valor * unPorcentaje .! !!Valor methodsFor: 'not defined category' stamp: 'da 9/24/2025 09:43'!calcularConPeso: peso altura: altura edad: edad	valor := edad calcularCon: peso yAltura: altura.! !!Valor methodsFor: 'not defined category' stamp: 'da 9/22/2025 12:15'!esMayorQue: otroValor			(otroValor esMayor: valor )ifTrue: [ ^false  ].	^true.! !!Valor methodsFor: 'not defined category' stamp: 'da 9/22/2025 12:38'!compararConValorEnReales: valorEsperado precision: presicion	|valorReal|	valorReal := valor/245. 	^(valorReal <(valorEsperado +presicion) )&(valorReal >(valorEsperado -presicion) )	! !!Valor methodsFor: 'not defined category' stamp: 'da 9/21/2025 17:40'!esMayor: unNumero 	^valor>unNumero .! !