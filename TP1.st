Object subclass: #AlgoConsejo	instanceVariableNames: 'criterio futbolistas'	classVariableNames: ''	package: 'TP1'!!AlgoConsejo methodsFor: 'initialization' stamp: 'dani 9/18/2025 16:46'!initialize 	futbolistas := OrderedCollection new.! !!AlgoConsejo methodsFor: 'initialization' stamp: 'da 9/21/2025 17:51'!setCriterio: unCriterio	criterio:=Criterio definir: unCriterio  .! !!AlgoConsejo methodsFor: 'as yet unclassified' stamp: 'da 9/19/2025 16:44'!valorDe: unNombre	|fubtolistaBuscado|	fubtolistaBuscado := self buscarNombre:  unNombre .	^fubtolistaBuscado valor.! !!AlgoConsejo methodsFor: 'as yet unclassified' stamp: 'da 9/21/2025 18:42'!obtenerFutbolistaSegunCriterio		|futbolistEncontrado| 		futbolistEncontrado := futbolistas inject: futbolistas first into: [ :mejor :actual |        (criterio  comparar: actual con: mejor) ].	^futbolistEncontrado nombre.! !!AlgoConsejo methodsFor: 'as yet unclassified' stamp: 'dani 9/18/2025 16:43'!registrarFutbolistaConNombre: unNombre dePeso: unPeso  yAltura: unaAltura yEdad: unaEdad yProvenienteDelClub: unClub DePais: unPais		|unFutbolista|		unFutbolista := Futbolista new.	unFutbolista deNombre: unNombre dePeso: unPeso deAltura: unaAltura deEdad: unaEdad deClub: unClub dePais: unPais .	futbolistas add: unFutbolista .! !!AlgoConsejo methodsFor: 'as yet unclassified' stamp: 'da 9/19/2025 16:43'!buscarNombre: unNombre|futbolsitaEncontrado|futbolsitaEncontrado := futbolistas detect: [ :futbolista | futbolista tuNombreEs: unNombre  ].^futbolsitaEncontrado .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoConsejo class	instanceVariableNames: 'futbolistas'!!AlgoConsejo class methodsFor: 'as yet unclassified' stamp: 'dani 9/17/2025 21:13'!conCriterioMas: unCriterio	|algoC|	algoC:= self  new. 	algoC setCriterio: unCriterio.	^algoC! !!AlgoConsejo class methodsFor: 'nil' stamp: 'dani 9/18/2025 17:03'!registrarFutbolistaConNombre: unNombre dePeso: unPeso  yAltura: unaAltura yEdad: unaEdad yProvenienteDelClub: unClub DePais: unPais		|unFutbolista|		unFutbolista := Futbolista new.	unFutbolista  deNombre: unNombre  dePeso: unPeso   deAltura: unaAltura   deEdad: unaEdad   deClub: unClub   dePais: unPais .		futbolistas add: unFutbolista .! !Object subclass: #Clubes	instanceVariableNames: 'confedereaciones nombreClub'	classVariableNames: ''	package: 'TP1'!!Clubes methodsFor: 'as yet unclassified' stamp: 'da 9/19/2025 17:47'!conClub: unClub 	nombreClub:=unClub .! !!Clubes methodsFor: 'as yet unclassified' stamp: 'da 9/19/2025 18:29'!porcentajeExtra	|categoria|	categoria := confedereaciones at: nombreClub ifAbsent: [ #europeo ].		categoria =#argentino ifTrue: [ ^1.1 ].		categoria =#conmebol ifTrue: [ ^1.25 ].			categoria =#europeo ifTrue: [ ^1.5 ].! !!Clubes methodsFor: 'initialization' stamp: 'da 9/19/2025 18:04'!initialize 	confedereaciones := Dictionary new.	confedereaciones at: 'Union de Santa Fe' put: #argentino;	at: 'Colo Colo' put:#conmebol;    at: 'Boca Juniors' put: #argentino;    at: 'Flamengo' put: #conmebol;    at: 'Real Madrid' put: #europeo.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Clubes class	instanceVariableNames: ''!!Clubes class methodsFor: 'as yet unclassified' stamp: 'da 9/19/2025 17:48'!conClub: unClub	|club|		club := self new.	club conClub: unClub .	^club .! !Object subclass: #Criterio	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Criterio methodsFor: 'as yet unclassified' stamp: 'da 9/21/2025 16:37'!comparar: unFutbolista con: otroFutbolista	self subclassResponsibility .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Criterio class	instanceVariableNames: ''!!Criterio class methodsFor: 'as yet unclassified' stamp: 'da 9/21/2025 17:53'!definir:unCriterio 	unCriterio = 'Caro' ifTrue: [ ^CriterioCaro new. ].		unCriterio = 'Barato' ifTrue: [ ^CriterioBarato  new. ]! !Criterio subclass: #CriterioBarato	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CriterioBarato methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 12:31'!comparar:  unFutbolista con: otroFutbolista 	|valorUnFutbolista valorOtroFutbolista| 	valorUnFutbolista:= unFutbolista valor.	valorOtroFutbolista:=otroFutbolista valor. 		(valorUnFutbolista esMayorQue:  valorOtroFutbolista ) ifTrue: [^otroFutbolista  ].	^unFutbolista .! !Criterio subclass: #CriterioCaro	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CriterioCaro methodsFor: 'as yet unclassified' stamp: 'da 9/21/2025 18:57'!comparar:  unFutbolista con: otroFutbolista 	|valorUnFutbolista valorOtroFutbolista| 	valorUnFutbolista:= unFutbolista valor.	valorOtroFutbolista:=otroFutbolista valor. 		(valorUnFutbolista esMayorQue:  valorOtroFutbolista ) ifTrue: [^unFutbolista ].	^otroFutbolista .! !Object subclass: #Edad	instanceVariableNames: 'edad'	classVariableNames: ''	package: 'TP1'!!Edad methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 16:17'!calcularCon:peso yAltura: altura 	self subclassResponsibility ! !!Edad methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 16:32'!definirEdad: unaEdad 	edad:=unaEdad .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Edad class	instanceVariableNames: ''!!Edad class methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 17:26'!conEdad: unaEdad 	|edadRetornada|	edadRetornada := (unaEdad >33)ifTrue: [ 		EdadMayor  new.		  ] ifFalse: [  		EdadMenor  new].		edadRetornada definirEdad: unaEdad.	^edadRetornada ! !Edad subclass: #EdadMayor	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!EdadMayor methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 16:36'!calcularCon:peso yAltura: altura 	^(100 * peso * (altura sqrt )/(edad raisedToInteger:3)).! !Edad subclass: #EdadMenor	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!EdadMenor methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 16:33'!calcularCon:peso yAltura: altura 		^((peso* altura)/edad)! !Object subclass: #Futbolista	instanceVariableNames: 'nombre peso altura edad club pais'	classVariableNames: ''	package: 'TP1'!!Futbolista methodsFor: 'accessing' stamp: 'da 9/21/2025 18:34'!nombre  ^nombre ! !!Futbolista methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 16:28'!valor 	|valor porcentaje|	"valor:= Valor edad: edad ."	valor:= Valor new.	porcentaje := (club porcentajeExtra).	valor calcularConPeso: peso altura: altura edad: edad yPorcentaje: porcentaje .		^valor ! !!Futbolista methodsFor: 'as yet unclassified' stamp: 'dani 9/18/2025 16:56'!tuNombreEs: unNombre	^nombre = unNombre .! !!Futbolista methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 16:26'!deNombre: unNombre dePeso: unPeso deAltura: unaAltura deEdad: unaEdad deClub: unClub dePais: unPais		nombre:=unNombre .	peso:=unPeso .	altura:=unaAltura .	edad:= Edad conEdad: unaEdad  .	club:= Clubes conClub: unClub   .	pais:=unPais .! !Object subclass: #Valor	instanceVariableNames: 'valor'	classVariableNames: ''	package: 'TP1'!!Valor methodsFor: 'as yet unclassified' stamp: 'da 9/19/2025 16:49'!compararCon: valorEsperado precision: presicion	^(valor<(valorEsperado +presicion) )&(valor>(valorEsperado -presicion) )! !!Valor methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 12:15'!esMayorQue: otroValor			(otroValor esMayor: valor )ifTrue: [ ^false  ].	^true.! !!Valor methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 16:29'!calcularConPeso: peso altura: altura edad: edad yPorcentaje: unPorcentaje			valor := edad  calcularCon: peso yAltura: altura .		valor := valor * unPorcentaje .		! !!Valor methodsFor: 'as yet unclassified' stamp: 'da 9/21/2025 17:40'!esMayor: unNumero 	^valor>unNumero .! !!Valor methodsFor: 'as yet unclassified' stamp: 'da 9/19/2025 16:46'!getValor ^valor ! !!Valor methodsFor: 'as yet unclassified' stamp: 'da 9/22/2025 12:38'!compararConValorEnReales: valorEsperado precision: presicion	|valorReal|	valorReal := valor/245. 	^(valorReal <(valorEsperado +presicion) )&(valorReal >(valorEsperado -presicion) )	! !